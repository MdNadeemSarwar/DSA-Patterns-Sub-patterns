1. Pattern Identify Karna
Jab aapko array me elements diye hote hain jo continuous range ke hote hain (like 1 to N ya 0 to N), aur question bolta hai:
Missing number find karo
Duplicate element find karo
First missing positive find karo

ðŸ‘‰ Tab aap Cyclic Sort use kar sakte ho.
2. Pattern Explain Karna
Idea simple hai: Har number apne correct index pe hona chahiye.
Agar numbers 1 to N hain â†’ element x ko index x-1 pe hona chahiye.
Agar numbers 0 to N hain â†’ element x ko index x pe hona chahiye.
Hum array ke elements ko swap karke unki correct jagah pe bhejte hain.

3. Algorithm / Logic
Array traverse karo index i = 0 se.
Agar current element apne correct index pe nahi hai â†’ usko uske correct index ke element ke saath swap karo.
Agar correct index pe hai, to i++ move karo.
Ye tab tak chalta hai jab tak saare numbers apne jagah pe nahi aa jaate.

4. Dry Run Example
Example: nums = [3, 1, 5, 4, 2]

i = 0 â†’ nums[0] = 3 â†’ correct index = 2 â†’ swap nums[0] & nums[2]
Array â†’ [5, 1, 3, 4, 2]

i = 0 â†’ nums[0] = 5 â†’ correct index = 4 â†’ swap nums[0] & nums[4]
Array â†’ [2, 1, 3, 4, 5]

i = 0 â†’ nums[0] = 2 â†’ correct index = 1 â†’ swap nums[0] & nums[1]
Array â†’ [1, 2, 3, 4, 5]
Ab saare correct jagah pe hain âœ…

Array 0 to N ke numbers hote hain, ek number missing hai.
Approach with Cyclic Sort:
Har number ko uske index pe place karte hain.
Traverse karte time agar nums[i] != i, wahi missing number hai.
Agar sab sahi jagah pe hain, missing = N.

TC=>O(n)
SC=>O(1)

class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int i=0;
        int n = nums.size();
        while(i<n){
            if(nums[i] < n && nums[i] != nums[nums[i]]){
                swap(nums[i], nums[nums[i]]);
            }
            else{
                i++;
            }
        }

        for(int i=0; i<n; i++){
            if(nums[i] != i){
                return i;
            }
        }
        return n;  
    }
};

-----------------------------------------------------------

class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int sum = 0;
        int n = nums.size();
        sum = n*(n+1)/2;
        for(int i=0; i<n; i++){
            sum = sum - nums[i];
        }
        return sum;
    }
};
