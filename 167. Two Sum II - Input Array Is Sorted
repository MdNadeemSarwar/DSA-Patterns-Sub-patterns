TC=> O(N)
SC=> O(1)
TWO Pointer Approach

class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
      int start = 0;
      int end = numbers.size()-1;
      while(start < end){
        int sum = numbers[start] + numbers[end];
        if(sum == target){
            return{start+1, end+1};
        }
        else if(sum < target){
            start++;
        }
        else{
            end--;
        }
      }
      return {};  
    }
};

----------------------------------------Mathmatial Approach --------------------------------------------------

TC=> O(N)
SC=> O(N)

class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        unordered_map<int, int>maps;
      
        for(int i=0; i<numbers.size(); i++){
            int comple = target - numbers[i];
            if(maps.find(comple) != maps.end()){
                return {maps[comple]+1, i+1};
            }
            maps[numbers[i]] = i;  
        }
        return {};
    }
};
