ðŸ”¹ Example Input
prices = [100, 80, 60, 70, 60, 75, 85]
Goal â†’ Har price ka span calculate karna.

ðŸ”¹ Step by Step Dry Run
Initialization
stack<int> st = [] â†’ indices of prices jinka span abhi calculate nahi hua
vector<int> prices = []
day = -1 â†’ kyunki next() me pehle hi day++ karenge, first day ka index 0 ho jaye
Day 0 â†’ price = 100
day++ â†’ day = 0
prices.push_back(100) â†’ prices = [100]
Stack empty â†’ while loop skip
if(st.empty()) â†’ true â†’ span = day + 1 = 0 + 1 = 1
Reason: Pehle koi price nahi tha â†’ span sirf current day = 1
st.push(0) â†’ st = [0]

Return 1
âœ… Span array so far: [1]
Day 1 â†’ price = 80
day++ â†’ day = 1
prices.push_back(80) â†’ prices = [100, 80]
Stack top = 0 â†’ prices[0] = 100 > 80 â†’ while loop skip
Stack not empty â†’ span = day - st.top() = 1 - 0 = 1
Reason: Pehle se bada price mila â†’ span sirf 1 din
st.push(1) â†’ st = [0,1]
Return 1

âœ… Span array so far: [1,1]

Day 2 â†’ price = 60
day = 2
prices = [100,80,60]
Stack top = 1 â†’ prices[1]=80 > 60 â†’ skip while
Stack not empty â†’ span = 2 - 1 = 1
st.push(2) â†’ st = [0,1,2]
Return 1

âœ… Span array so far: [1,1,1]

Day 3 â†’ price = 70
day = 3
prices = [100,80,60,70]
Stack top = 2 â†’ prices[2]=60 â‰¤ 70 â†’ pop â†’ st=[0,1]
Stack top = 1 â†’ prices[1]=80 > 70 â†’ stop popping
Stack not empty â†’ span = day - st.top() = 3 - 1 = 2
Reason: Peeche consecutive chhote prices = 60, apna din = 1+1 â†’ 2
st.push(3) â†’ st = [0,1,3]
Return 2

âœ… Span array so far: [1,1,1,2]
Day 4 â†’ price = 60
day = 4
prices = [100,80,60,70,60]
Stack top = 3 â†’ prices[3]=70 > 60 â†’ skip while
Stack not empty â†’ span = 4 - 3 = 1
st.push(4) â†’ st = [0,1,3,4]
Return 1

âœ… Span array so far: [1,1,1,2,1]
Day 5 â†’ price = 75
day = 5
prices = [100,80,60,70,60,75]
Stack top = 4 â†’ prices[4]=60 â‰¤ 75 â†’ pop â†’ st=[0,1,3]
Stack top = 3 â†’ prices[3]=70 â‰¤ 75 â†’ pop â†’ st=[0,1]
Stack top = 1 â†’ prices[1]=80 > 75 â†’ stop
Stack not empty â†’ span = 5 - 1 = 4
Reason: Peeche consecutive chhote prices = 60,70, apna din = total 4
st.push(5) â†’ st=[0,1,5]
Return 4

âœ… Span array so far: [1,1,1,2,1,4]
Day 6 â†’ price = 85
day = 6
prices = [100,80,60,70,60,75,85]
Stack top = 5 â†’ prices[5]=75 â‰¤ 85 â†’ pop â†’ st=[0,1]
Stack top = 1 â†’ prices[1]=80 â‰¤ 85 â†’ pop â†’ st=[0]
Stack top = 0 â†’ prices[0]=100 > 85 â†’ stop
Stack not empty â†’ span = 6 - 0 = 6
Reason: Peeche consecutive chhote prices = 80,75,60,70,60 + apna din = 6
st.push(6) â†’ st=[0,6]
Return 6
âœ… Final Span Array: [1,1,1,2,1,4,6]


class StockSpanner {
public:
    stack<int> st;         // stack me indices store karenge
    vector<int> prices;    // har din ka price store karne ke liye
    int day;               // current day number
    StockSpanner() {
        day = -1; // start from -1, taaki pehla din 0 ho
    }
    
    int next(int price) {
        day++;
        prices.push_back(price);

         // stack me indices hai jinke prices current se bade hone chahiye
        while (!st.empty() && prices[st.top()] <= price) {
            st.pop();
        }
        int span;
        if (st.empty()) {
            span = day + 1;   // sab din chhote nikle
        } else {
            span = day - st.top();  // difference of indices
        }

        st.push(day);  // current index dal do
        return span;
    }
};

------------------------------------------------------------------------------------------------------------------------------------------

class StockSpanner {
public:
    stack<pair<int,int>> st; // {price, day}
    int day;
    StockSpanner() {
        day = -1;
    }
    
    int next(int price) {
        day++;
        while(!st.empty() && st.top().first <= price) {
            st.pop();
        }
        if(st.empty()) {
            st.push({price, day});
            return day + 1;
        }
        int span = day - st.top().second;
        st.push({price, day});
        return span;
    }
};

