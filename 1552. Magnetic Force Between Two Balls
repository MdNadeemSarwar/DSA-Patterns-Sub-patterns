position = [1,2,3,4,7], m=3
Hume 3 balls place karni hain taaki minimum distance (force) between any two balls maximum ho.

Step 1: Sort
Sorted = [1,2,3,4,7]
Placement hamesha sorted positions pe hoti hai.

Step 2: Range of Binary Search
Minimum distance (low) = 1 (adjacent points ka difference)
Maximum distance (high) = 7-1 = 6
So: low = 1, high = 6

Step 3: Binary Search Process
🔹 Iteration 1
mid = (1+6)/2 = 3
👉 Check karte hain: Kya hum balls ko at least distance 3 pe place kar sakte hain?
Place 1st ball at position 1
Next ball kam se kam 1+3 = 4 pe hona chahiye → place at 4
Next ball kam se kam 4+3 = 7 pe hona chahiye → place at 7

✅ Total 3 balls placed ho gayi.
So mid=3 possible hai.
👉 Answer = 3, aur aur bada try karte hain → low = mid+1 = 4

🔹 Iteration 2
low=4, high=6 → mid=(4+6)/2=5
👉 Check for distance 5:
Place 1st ball at 1
Next ball kam se kam 1+5=6 pe hona chahiye → place at 7
Next ball required but position khatam.
❌ Only 2 balls place hui. Not possible.
👉 high = mid-1 = 4

🔹 Iteration 3
low=4, high=4 → mid=4
👉 Check for distance 4:
Place 1st ball at 1
Next ball kam se kam 1+4=5 pe hona chahiye → place at 7
Bas 2 balls hi hui.

❌ Not possible.
👉 high = mid-1 = 3

Step 4: Exit
Loop stop jab low > high ho jata hai.
Last valid answer = 3
✅ Final Answer = 3


TC= O(n log n)
Sc= O(1)

class Solution {
public:
    bool possible(vector<int> & position, int mid, int m){
        int n = position.size();
        int count = 1;
        int lastposition = position[0];
        for(int i=1; i<n; i++){
            if(position[i] - lastposition >= mid){
                lastposition = position[i];
                count++;
            }
            if(count >= m){
                return true;
            }
        }
        return false;
    }
    int maxDistance(vector<int>& position, int m) {
        sort(position.begin(), position.end());
        int start = 1;
        int end = position.back() - position.front();
        int ans = 0;

        while(start <= end){
            int mid = start + (end - start)/2;
            if(possible(position, mid, m)){
                ans = mid;
                start = mid + 1;
            }
            else{
                end = mid - 1;
            }
        }
        return ans;
    }
};    
